diff --git a/sdk/storage/azblob/internal/shared/mmf_unix.go b/sdk/storage/azblob/internal/shared/mmf_unix.go
index cdcadf3116..b8f9e1a180 100644
--- a/sdk/storage/azblob/internal/shared/mmf_unix.go
+++ b/sdk/storage/azblob/internal/shared/mmf_unix.go
@@ -1,6 +1,6 @@
-//go:build go1.18 && (linux || darwin || dragonfly || freebsd || openbsd || netbsd || solaris || aix)
+//go:build go1.18 && (linux || darwin || dragonfly || freebsd || openbsd || netbsd || solaris || aix || zos)
 // +build go1.18
-// +build linux darwin dragonfly freebsd openbsd netbsd solaris aix
+// +build linux darwin dragonfly freebsd openbsd netbsd solaris aix zos

 // Copyright (c) Microsoft Corporation. All rights reserved.
 // Licensed under the MIT License. See License.txt in the project root for license information.
@@ -18,7 +18,7 @@ type Mmb []byte

 // newMMB creates a new memory mapped buffer with the specified size
 func NewMMB(size int64) (Mmb, error) {
-       prot, flags := syscall.PROT_READ|syscall.PROT_WRITE, syscall.MAP_ANON|syscall.MAP_PRIVATE
+       prot, flags := syscall.PROT_READ|syscall.PROT_WRITE, syscall.MAP_PRIVATE
        addr, err := syscall.Mmap(-1, 0, int(size), prot, flags)
        if err != nil {
                return nil, os.NewSyscallError("Mmap", err)
